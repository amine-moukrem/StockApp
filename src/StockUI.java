/**
 * Author: Amine Moukrem
 * Date last edit: December 9th, 2017
 */

import java.io.File;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.ChartUtilities; 
import java.io.IOException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import org.jfree.data.category.DefaultCategoryDataset;
import org.json.JSONException;


public class StockUI extends javax.swing.JFrame {
    private ImageIcon graphPicture;
    private String option = "";
    private String chartTitle = "";
    StockJSONReader jsonreaderAAPL;
    StockJSONReader jsonreaderMSFT;
    JFreeChart lineChart = ChartFactory.createLineChart(chartTitle, "Points", "Time", defaultDataset(), PlotOrientation.VERTICAL, true, true, false);

    /**
     * Creates new form StockUI
     * @throws java.io.IOException
     * @throws java.text.ParseException
     */
    public StockUI() throws IOException, JSONException, ParseException {
        jsonreaderAAPL = new StockJSONReader();
        jsonreaderMSFT = new StockJSONReader();
        graphPicture = new ImageIcon("LineChart.jpeg");
        
        initComponents();
        refreshDailyViewApple();    /*
        refreshDailyViewMicrosoft();
        refreshWeeklyViewApple();
        refreshWeeklyViewMicrosoft();*/
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StockTabbedPane = new javax.swing.JTabbedPane();
        dailyPanel = new javax.swing.JPanel();
        dailyLayeredPane = new javax.swing.JLayeredPane();
        stockChangeDailyBox = new javax.swing.JComboBox<>();
        appleDailyViewPanel = new javax.swing.JPanel();
        currentDateDailyLabelAAPL = new javax.swing.JLabel();
        stockNameDailyLabelAAPL = new javax.swing.JLabel();
        openDailyLabelAAPL = new javax.swing.JLabel();
        highDailyLabelAAPL = new javax.swing.JLabel();
        lowDailyLabelAAPL = new javax.swing.JLabel();
        closeDailyLabelAAPL = new javax.swing.JLabel();
        volumeDailyLabelAAPL = new javax.swing.JLabel();
        smaDailyLabelAAPL = new javax.swing.JLabel();
        rsiDailyLabelAAPL = new javax.swing.JLabel();
        refreshDateDailyLabelAAPL = new javax.swing.JLabel();
        refreshAppleDailyViewButton = new javax.swing.JButton();
        microsoftDailyViewPanel = new javax.swing.JPanel();
        stockNameDailyLabelMSFT = new javax.swing.JLabel();
        openDailyLabelMSFT = new javax.swing.JLabel();
        highDailyLabelMSFT = new javax.swing.JLabel();
        lowDailyLabelMSFT = new javax.swing.JLabel();
        closeDailyLabelMSFT = new javax.swing.JLabel();
        volumeDailyLabelMSFT = new javax.swing.JLabel();
        smaDailyLabelMSFT = new javax.swing.JLabel();
        rsiDailyLabelMSFT = new javax.swing.JLabel();
        refreshDateDailyLabelMSFT = new javax.swing.JLabel();
        refreshMicrosoftDailyViewButton = new javax.swing.JButton();
        currentDateDailyLabelMSFT = new javax.swing.JLabel();
        weeklyPanel = new javax.swing.JPanel();
        weeklyLayeredPane = new javax.swing.JLayeredPane();
        stockChangeBoxWeekly = new javax.swing.JComboBox<>();
        appleWeeklyViewPanel = new javax.swing.JPanel();
        currentDateWeeklyLabelAAPL = new javax.swing.JLabel();
        stockNameWeeklyLabelAAPL = new javax.swing.JLabel();
        openWeeklyLabelAAPL = new javax.swing.JLabel();
        highWeeklyLabelAAPL = new javax.swing.JLabel();
        lowWeeklyLabelAAPL = new javax.swing.JLabel();
        closeWeeklyLabelAAPL = new javax.swing.JLabel();
        volumeWeeklyLabelAAPL = new javax.swing.JLabel();
        smaWeeklyLabelAAPL = new javax.swing.JLabel();
        rsiWeeklyLabelAAPL = new javax.swing.JLabel();
        refreshDateWeeklyLabelAAPL = new javax.swing.JLabel();
        refreshAppleWeeklyViewButton = new javax.swing.JButton();
        microsoftWeeklyViewPanel = new javax.swing.JPanel();
        stockNameWeeklyLabelMSFT = new javax.swing.JLabel();
        openWeeklyLabelMSFT = new javax.swing.JLabel();
        highWeeklyLabelMSFT = new javax.swing.JLabel();
        lowWeeklyLabelMSFT = new javax.swing.JLabel();
        closeWeeklyLabelMSFT = new javax.swing.JLabel();
        volumeWeeklyLabelMSFT = new javax.swing.JLabel();
        smaWeeklyLabelMSFT = new javax.swing.JLabel();
        rsiWeeklyLabelMSFT = new javax.swing.JLabel();
        refreshDateWeeklyLabelMSFT = new javax.swing.JLabel();
        refreshMicrosoftWeeklyViewButton = new javax.swing.JButton();
        currentDateWeeklyLabelMSFT = new javax.swing.JLabel();
        graphPanel = new javax.swing.JPanel();
        scrollPaneGraphPanel = new javax.swing.JScrollPane();
        graphOptions = new javax.swing.JList<>();
        stockChangeBoxGraphPane = new javax.swing.JComboBox<>();
        graphImagePanel = new javax.swing.JPanel();
        graphPictureLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 400));

        stockChangeDailyBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AAPL", "MSFT" }));
        stockChangeDailyBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockChangeDailyBoxActionPerformed(evt);
            }
        });

        currentDateDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        stockNameDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        openDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        highDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lowDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        closeDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        volumeDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        smaDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        rsiDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        refreshDateDailyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        refreshAppleDailyViewButton.setText("Refresh");
        refreshAppleDailyViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAppleDailyViewButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout appleDailyViewPanelLayout = new javax.swing.GroupLayout(appleDailyViewPanel);
        appleDailyViewPanel.setLayout(appleDailyViewPanelLayout);
        appleDailyViewPanelLayout.setHorizontalGroup(
            appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appleDailyViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentDateDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(appleDailyViewPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(refreshDateDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stockNameDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(appleDailyViewPanelLayout.createSequentialGroup()
                                .addGroup(appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(refreshAppleDailyViewButton)
                                    .addGroup(appleDailyViewPanelLayout.createSequentialGroup()
                                        .addGroup(appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(highDailyLabelAAPL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                            .addComponent(openDailyLabelAAPL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lowDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(closeDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(smaDailyLabelAAPL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                            .addComponent(volumeDailyLabelAAPL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(rsiDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))))
                                .addGap(8, 8, 8)))
                        .addGap(0, 30, Short.MAX_VALUE)))
                .addContainerGap())
        );
        appleDailyViewPanelLayout.setVerticalGroup(
            appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appleDailyViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentDateDailyLabelAAPL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stockNameDailyLabelAAPL, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(volumeDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(openDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(smaDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(highDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appleDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rsiDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(lowDailyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeDailyLabelAAPL, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(refreshDateDailyLabelAAPL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshAppleDailyViewButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        stockNameDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        stockNameDailyLabelMSFT.setText("Data not yet loaded");

        openDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        highDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lowDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        closeDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        volumeDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        smaDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        rsiDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        refreshDateDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        refreshMicrosoftDailyViewButton.setText("Refresh");
        refreshMicrosoftDailyViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshMicrosoftDailyViewButtonActionPerformed(evt);
            }
        });

        currentDateDailyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout microsoftDailyViewPanelLayout = new javax.swing.GroupLayout(microsoftDailyViewPanel);
        microsoftDailyViewPanel.setLayout(microsoftDailyViewPanelLayout);
        microsoftDailyViewPanelLayout.setHorizontalGroup(
            microsoftDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(microsoftDailyViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(microsoftDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentDateDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(microsoftDailyViewPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(microsoftDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(refreshMicrosoftDailyViewButton)
                            .addGroup(microsoftDailyViewPanelLayout.createSequentialGroup()
                                .addGroup(microsoftDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(highDailyLabelMSFT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(lowDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(closeDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(openDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(microsoftDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(smaDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rsiDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(volumeDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(refreshDateDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                            .addComponent(stockNameDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
        );
        microsoftDailyViewPanelLayout.setVerticalGroup(
            microsoftDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(microsoftDailyViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentDateDailyLabelMSFT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stockNameDailyLabelMSFT, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(microsoftDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(volumeDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(openDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(microsoftDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(smaDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(highDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(microsoftDailyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rsiDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(lowDailyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeDailyLabelMSFT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(refreshDateDailyLabelMSFT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshMicrosoftDailyViewButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        dailyLayeredPane.setLayer(stockChangeDailyBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dailyLayeredPane.setLayer(appleDailyViewPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        dailyLayeredPane.setLayer(microsoftDailyViewPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout dailyLayeredPaneLayout = new javax.swing.GroupLayout(dailyLayeredPane);
        dailyLayeredPane.setLayout(dailyLayeredPaneLayout);
        dailyLayeredPaneLayout.setHorizontalGroup(
            dailyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dailyLayeredPaneLayout.createSequentialGroup()
                .addContainerGap(414, Short.MAX_VALUE)
                .addComponent(stockChangeDailyBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(dailyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dailyLayeredPaneLayout.createSequentialGroup()
                    .addComponent(appleDailyViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 70, Short.MAX_VALUE)))
            .addGroup(dailyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dailyLayeredPaneLayout.createSequentialGroup()
                    .addComponent(microsoftDailyViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 70, Short.MAX_VALUE)))
        );
        dailyLayeredPaneLayout.setVerticalGroup(
            dailyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dailyLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stockChangeDailyBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(319, Short.MAX_VALUE))
            .addGroup(dailyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(appleDailyViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(dailyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(microsoftDailyViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dailyPanelLayout = new javax.swing.GroupLayout(dailyPanel);
        dailyPanel.setLayout(dailyPanelLayout);
        dailyPanelLayout.setHorizontalGroup(
            dailyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
            .addGroup(dailyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dailyLayeredPane))
        );
        dailyPanelLayout.setVerticalGroup(
            dailyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
            .addGroup(dailyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dailyLayeredPane))
        );

        StockTabbedPane.addTab("Daily View", dailyPanel);

        stockChangeBoxWeekly.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MSFT", "AAPL" }));
        stockChangeBoxWeekly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockChangeBoxWeeklyActionPerformed(evt);
            }
        });

        currentDateWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        stockNameWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        stockNameWeeklyLabelAAPL.setText("Data not yet loaded");

        openWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        highWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lowWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        closeWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        volumeWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        smaWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        rsiWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        refreshDateWeeklyLabelAAPL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        refreshAppleWeeklyViewButton.setText("Refresh");
        refreshAppleWeeklyViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAppleWeeklyViewButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout appleWeeklyViewPanelLayout = new javax.swing.GroupLayout(appleWeeklyViewPanel);
        appleWeeklyViewPanel.setLayout(appleWeeklyViewPanelLayout);
        appleWeeklyViewPanelLayout.setHorizontalGroup(
            appleWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appleWeeklyViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(appleWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentDateWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(appleWeeklyViewPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(appleWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(refreshAppleWeeklyViewButton)
                            .addGroup(appleWeeklyViewPanelLayout.createSequentialGroup()
                                .addGroup(appleWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(highWeeklyLabelAAPL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(openWeeklyLabelAAPL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lowWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(closeWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(appleWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(volumeWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addComponent(smaWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rsiWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)))
                            .addComponent(refreshDateWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stockNameWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
        );
        appleWeeklyViewPanelLayout.setVerticalGroup(
            appleWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appleWeeklyViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentDateWeeklyLabelAAPL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stockNameWeeklyLabelAAPL, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appleWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(volumeWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(openWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appleWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(smaWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(highWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appleWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rsiWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(lowWeeklyLabelAAPL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeWeeklyLabelAAPL, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(refreshDateWeeklyLabelAAPL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshAppleWeeklyViewButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        stockNameWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        stockNameWeeklyLabelMSFT.setText("Data not yet loaded");

        openWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        highWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lowWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        closeWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        volumeWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        smaWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        rsiWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        refreshDateWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        refreshMicrosoftWeeklyViewButton.setText("Refresh");
        refreshMicrosoftWeeklyViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshMicrosoftWeeklyViewButtonActionPerformed(evt);
            }
        });

        currentDateWeeklyLabelMSFT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout microsoftWeeklyViewPanelLayout = new javax.swing.GroupLayout(microsoftWeeklyViewPanel);
        microsoftWeeklyViewPanel.setLayout(microsoftWeeklyViewPanelLayout);
        microsoftWeeklyViewPanelLayout.setHorizontalGroup(
            microsoftWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(microsoftWeeklyViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(microsoftWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentDateWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(microsoftWeeklyViewPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(microsoftWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(refreshMicrosoftWeeklyViewButton)
                            .addGroup(microsoftWeeklyViewPanelLayout.createSequentialGroup()
                                .addGroup(microsoftWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(highWeeklyLabelMSFT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(openWeeklyLabelMSFT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lowWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(closeWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(microsoftWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(volumeWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addComponent(smaWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rsiWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)))
                            .addComponent(refreshDateWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stockNameWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
        );
        microsoftWeeklyViewPanelLayout.setVerticalGroup(
            microsoftWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(microsoftWeeklyViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentDateWeeklyLabelMSFT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stockNameWeeklyLabelMSFT, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(microsoftWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(volumeWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(openWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(microsoftWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(smaWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(highWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(microsoftWeeklyViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rsiWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(lowWeeklyLabelMSFT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeWeeklyLabelMSFT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(refreshDateWeeklyLabelMSFT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshMicrosoftWeeklyViewButton)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        weeklyLayeredPane.setLayer(stockChangeBoxWeekly, javax.swing.JLayeredPane.DEFAULT_LAYER);
        weeklyLayeredPane.setLayer(appleWeeklyViewPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        weeklyLayeredPane.setLayer(microsoftWeeklyViewPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout weeklyLayeredPaneLayout = new javax.swing.GroupLayout(weeklyLayeredPane);
        weeklyLayeredPane.setLayout(weeklyLayeredPaneLayout);
        weeklyLayeredPaneLayout.setHorizontalGroup(
            weeklyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, weeklyLayeredPaneLayout.createSequentialGroup()
                .addContainerGap(414, Short.MAX_VALUE)
                .addComponent(stockChangeBoxWeekly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(weeklyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(weeklyLayeredPaneLayout.createSequentialGroup()
                    .addComponent(microsoftWeeklyViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 70, Short.MAX_VALUE)))
            .addGroup(weeklyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(weeklyLayeredPaneLayout.createSequentialGroup()
                    .addComponent(appleWeeklyViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 70, Short.MAX_VALUE)))
        );
        weeklyLayeredPaneLayout.setVerticalGroup(
            weeklyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weeklyLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stockChangeBoxWeekly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(319, Short.MAX_VALUE))
            .addGroup(weeklyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(microsoftWeeklyViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(weeklyLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(appleWeeklyViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout weeklyPanelLayout = new javax.swing.GroupLayout(weeklyPanel);
        weeklyPanel.setLayout(weeklyPanelLayout);
        weeklyPanelLayout.setHorizontalGroup(
            weeklyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
            .addGroup(weeklyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(weeklyLayeredPane))
        );
        weeklyPanelLayout.setVerticalGroup(
            weeklyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
            .addGroup(weeklyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(weeklyLayeredPane))
        );

        StockTabbedPane.addTab("Weekly View", weeklyPanel);

        graphPanel.setEnabled(false);

        graphOptions.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Open", "High", "Low", "Close", "Volume", "SMA", "RSI" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        graphOptions.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        graphOptions.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                graphOptionsValueChanged(evt);
            }
        });
        scrollPaneGraphPanel.setViewportView(graphOptions);

        stockChangeBoxGraphPane.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AAPL", "MSFT" }));
        stockChangeBoxGraphPane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockChangeBoxGraphPaneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout graphImagePanelLayout = new javax.swing.GroupLayout(graphImagePanel);
        graphImagePanel.setLayout(graphImagePanelLayout);
        graphImagePanelLayout.setHorizontalGroup(
            graphImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
            .addGroup(graphImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(graphPictureLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE))
        );
        graphImagePanelLayout.setVerticalGroup(
            graphImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 352, Short.MAX_VALUE)
            .addGroup(graphImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(graphPictureLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphPanelLayout.createSequentialGroup()
                .addContainerGap(411, Short.MAX_VALUE)
                .addGroup(graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stockChangeBoxGraphPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scrollPaneGraphPanel))
                .addContainerGap())
            .addGroup(graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(graphPanelLayout.createSequentialGroup()
                    .addComponent(graphImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 76, Short.MAX_VALUE)))
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stockChangeBoxGraphPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneGraphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(graphImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        StockTabbedPane.addTab("Graph", graphPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(StockTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(StockTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stockChangeDailyBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockChangeDailyBoxActionPerformed
        // TODO add your handling code here:
        if (stockChangeDailyBox.getSelectedItem() == "MSFT") {
            dailyLayeredPane.setLayer(appleDailyViewPanel, 0);
        }
        if (stockChangeDailyBox.getSelectedItem() == "AAPL") {
            dailyLayeredPane.setLayer(appleDailyViewPanel, 1);
        }
    }//GEN-LAST:event_stockChangeDailyBoxActionPerformed

    private void refreshAppleDailyViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAppleDailyViewButtonActionPerformed
        try {
            refreshDailyViewApple();
        } catch (IOException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshAppleDailyViewButtonActionPerformed

    private void refreshMicrosoftDailyViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshMicrosoftDailyViewButtonActionPerformed
        try {
            refreshDailyViewMicrosoft();
        } catch (IOException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshMicrosoftDailyViewButtonActionPerformed

    private void stockChangeBoxWeeklyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockChangeBoxWeeklyActionPerformed
        // TODO add your handling code here:
        if (stockChangeBoxWeekly.getSelectedItem() == "MSFT") {
            weeklyLayeredPane.setLayer(appleWeeklyViewPanel, 0);
        }
        if (stockChangeBoxWeekly.getSelectedItem() == "AAPL") {
            weeklyLayeredPane.setLayer(appleWeeklyViewPanel, 1);
        }
    }//GEN-LAST:event_stockChangeBoxWeeklyActionPerformed

    private void refreshAppleWeeklyViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAppleWeeklyViewButtonActionPerformed
        try {
            refreshWeeklyViewApple();
        } catch (IOException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshAppleWeeklyViewButtonActionPerformed

    private void refreshMicrosoftWeeklyViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshMicrosoftWeeklyViewButtonActionPerformed
        try {
            refreshWeeklyViewMicrosoft();
        } catch (IOException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshMicrosoftWeeklyViewButtonActionPerformed

    private void stockChangeBoxGraphPaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockChangeBoxGraphPaneActionPerformed
        // TODO add your handling code here:
        if (stockChangeBoxGraphPane.getSelectedItem() == "MSFT") {
            try {
                jsonreaderMSFT.setStockJsonMicrosoft();
            } catch (IOException ex) {
                Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            jsonreaderMSFT.addPastWeekToArray(option);
        }
        if (stockChangeBoxGraphPane.getSelectedItem() == "AAPL") {
            try {
                jsonreaderAAPL.setStockJsonApple();
            } catch (IOException ex) {
                Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            jsonreaderAAPL.addPastWeekToArray(option);
        }
        createDataset();
        try {
            setGraphToPanel();
        } catch (IOException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        graphPicture.getImage().flush();
        graphPicture = new ImageIcon("LineChart.jpeg");
        graphPictureLabel.setIcon(graphPicture);
    }//GEN-LAST:event_stockChangeBoxGraphPaneActionPerformed

    private void graphOptionsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_graphOptionsValueChanged
        // TODO add your handling code here:
        
        String option = (String) graphOptions.getSelectedValue();
        if (stockChangeBoxGraphPane.getSelectedItem() == "MSFT") {
            jsonreaderMSFT.addPastWeekToArray(option);
        }
        if (stockChangeBoxGraphPane.getSelectedItem() == "AAPL") {
            jsonreaderAAPL.addPastWeekToArray(option);
        }
        chartTitle = option;
        setOption(option);
        lineChart.setTitle(option);
        lineChart = ChartFactory.createLineChart(chartTitle, "Time", "Points", createDataset(), PlotOrientation.VERTICAL, true, true, false);
        try {
            setGraphToPanel();
        } catch (IOException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        createDataset();
        try {
            setGraphToPanel();
        } catch (IOException ex) {
            Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        graphPicture.getImage().flush();
        graphPicture = new ImageIcon("LineChart.jpeg");
        graphPictureLabel.setIcon(graphPicture);
    }//GEN-LAST:event_graphOptionsValueChanged

    public void setOption(String option) {
        this.option = option;
    }
    
    public String getOption() {
        return this.option;
    }
    
    public DefaultCategoryDataset defaultDataset() { //Empty dataset
        DefaultCategoryDataset data = new DefaultCategoryDataset();
        return data;
    }
    
    public DefaultCategoryDataset createDataset() { // Dataset of stock data
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        if (stockChangeBoxGraphPane.getSelectedItem() == "MSFT") {
            for (int i = 0; i < jsonreaderMSFT.listVals().size(); i++) {
                dataset.addValue( jsonreaderMSFT.listVals().get(i) , getOption() , jsonreaderMSFT.listDates().get(i) );
            }
            return dataset;
        }
        else if (stockChangeBoxGraphPane.getSelectedItem() == "AAPL") {
             for (int i = 0; i < jsonreaderAAPL.listVals().size(); i++) {
                dataset.addValue( jsonreaderAAPL.listVals().get(i) , getOption() , jsonreaderAAPL.listDates().get(i) );
            }
            return dataset;
        }
        return dataset;
    }
    
    public void setGraphToPanel() throws IOException {
        JFreeChart lineChartObject = ChartFactory.createLineChart(
         "Recent Stocks " + stockChangeBoxGraphPane.getSelectedItem(),"Time",
         "Points",
         createDataset(),PlotOrientation.VERTICAL,
         true,true,false);
        
        lineChartObject.getCategoryPlot().getRangeAxis().setLowerBound(0);
        int width = 402;
        int height = 352;
        File lineChart = new File("LineChart.jpeg");
        ChartUtilities.saveChartAsJPEG(lineChart ,lineChartObject, width, height);
    }

    public void refreshDailyViewApple() throws IOException, ParseException {
        jsonreaderAAPL.setStockJsonApple();
        stockNameDailyLabelAAPL.setText("Latest " + jsonreaderAAPL.getCurrentStock());
        openDailyLabelAAPL.setText("Open: " + jsonreaderAAPL.getOpenDaily());
        highDailyLabelAAPL.setText("High: " + jsonreaderAAPL.getHighDaily());
        lowDailyLabelAAPL.setText("Low: " + jsonreaderAAPL.getLowDaily());
        closeDailyLabelAAPL.setText("Close: " + jsonreaderAAPL.getCloseDaily());
        volumeDailyLabelAAPL.setText("Volume: " + jsonreaderAAPL.getVolumeDaily());
        smaDailyLabelAAPL.setText("SMA: " + jsonreaderAAPL.getSMADaily());
        rsiDailyLabelAAPL.setText("RSI: " + jsonreaderAAPL.getRSIDaily());
    }
    
    public void refreshWeeklyViewApple() throws IOException, ParseException {
        jsonreaderAAPL.setStockJsonApple();
        stockNameWeeklyLabelAAPL.setText("Latest " + jsonreaderAAPL.getCurrentStock());
        openWeeklyLabelAAPL.setText("Open: " + jsonreaderAAPL.getOpenWeekly());
        highWeeklyLabelAAPL.setText("High: " + jsonreaderAAPL.getHighWeekly());
        lowWeeklyLabelAAPL.setText("Low: " + jsonreaderAAPL.getLowWeekly());
        closeWeeklyLabelAAPL.setText("Close: " + jsonreaderAAPL.getCloseWeekly());
        volumeWeeklyLabelAAPL.setText("Volume: " + jsonreaderAAPL.getVolumeWeekly());
        smaWeeklyLabelAAPL.setText("SMA: " + jsonreaderAAPL.getSMAWeekly());
        rsiWeeklyLabelAAPL.setText("RSI: " + jsonreaderAAPL.getRSIWeekly());
    }
    
    /**
     * Refreshes daily view of Microsoft stocks
     * @throws IOException 
     */
    public void refreshDailyViewMicrosoft() throws IOException, ParseException {
        jsonreaderMSFT.setStockJsonMicrosoft();
        stockNameDailyLabelMSFT.setText("Latest " + jsonreaderMSFT.getCurrentStock());
        openDailyLabelMSFT.setText("Open: " + jsonreaderMSFT.getOpenDaily());
        highDailyLabelMSFT.setText("High: " + jsonreaderMSFT.getHighDaily());
        lowDailyLabelMSFT.setText("Low: " + jsonreaderMSFT.getLowDaily());
        closeDailyLabelMSFT.setText("Close: " + jsonreaderMSFT.getCloseDaily());
        volumeDailyLabelMSFT.setText("Volume: " + jsonreaderMSFT.getVolumeDaily());
        smaDailyLabelMSFT.setText("SMA: " + jsonreaderMSFT.getSMADaily());
        rsiDailyLabelMSFT.setText("RSI: " + jsonreaderMSFT.getRSIDaily());
    }
    
    /**
     * Refreshes weekly view of Microsoft stocks
     * @throws IOException 
     */
    public void refreshWeeklyViewMicrosoft() throws IOException, ParseException {
        jsonreaderMSFT.setStockJsonMicrosoft();
        stockNameWeeklyLabelMSFT.setText("Latest " + jsonreaderMSFT.getCurrentStock());
        openWeeklyLabelMSFT.setText("Open: " + jsonreaderMSFT.getOpenWeekly());
        highWeeklyLabelMSFT.setText("High: " + jsonreaderMSFT.getHighWeekly());
        lowWeeklyLabelMSFT.setText("Low: " + jsonreaderMSFT.getLowWeekly());
        closeWeeklyLabelMSFT.setText("Close: " + jsonreaderMSFT.getCloseWeekly());
        volumeWeeklyLabelMSFT.setText("Volume: " + jsonreaderMSFT.getVolumeWeekly());
        smaWeeklyLabelMSFT.setText("SMA: " + jsonreaderMSFT.getSMAWeekly());
        rsiWeeklyLabelMSFT.setText("RSI: " + jsonreaderMSFT.getRSIWeekly());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new StockUI().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (JSONException ex) {
                    Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(StockUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane StockTabbedPane;
    private javax.swing.JPanel appleDailyViewPanel;
    private javax.swing.JPanel appleWeeklyViewPanel;
    private javax.swing.JLabel closeDailyLabelAAPL;
    private javax.swing.JLabel closeDailyLabelMSFT;
    private javax.swing.JLabel closeWeeklyLabelAAPL;
    private javax.swing.JLabel closeWeeklyLabelMSFT;
    private javax.swing.JLabel currentDateDailyLabelAAPL;
    private javax.swing.JLabel currentDateDailyLabelMSFT;
    private javax.swing.JLabel currentDateWeeklyLabelAAPL;
    private javax.swing.JLabel currentDateWeeklyLabelMSFT;
    private javax.swing.JLayeredPane dailyLayeredPane;
    private javax.swing.JPanel dailyPanel;
    private javax.swing.JPanel graphImagePanel;
    private javax.swing.JList<String> graphOptions;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JLabel graphPictureLabel;
    private javax.swing.JLabel highDailyLabelAAPL;
    private javax.swing.JLabel highDailyLabelMSFT;
    private javax.swing.JLabel highWeeklyLabelAAPL;
    private javax.swing.JLabel highWeeklyLabelMSFT;
    private javax.swing.JLabel lowDailyLabelAAPL;
    private javax.swing.JLabel lowDailyLabelMSFT;
    private javax.swing.JLabel lowWeeklyLabelAAPL;
    private javax.swing.JLabel lowWeeklyLabelMSFT;
    private javax.swing.JPanel microsoftDailyViewPanel;
    private javax.swing.JPanel microsoftWeeklyViewPanel;
    private javax.swing.JLabel openDailyLabelAAPL;
    private javax.swing.JLabel openDailyLabelMSFT;
    private javax.swing.JLabel openWeeklyLabelAAPL;
    private javax.swing.JLabel openWeeklyLabelMSFT;
    private javax.swing.JButton refreshAppleDailyViewButton;
    private javax.swing.JButton refreshAppleWeeklyViewButton;
    private javax.swing.JLabel refreshDateDailyLabelAAPL;
    private javax.swing.JLabel refreshDateDailyLabelMSFT;
    private javax.swing.JLabel refreshDateWeeklyLabelAAPL;
    private javax.swing.JLabel refreshDateWeeklyLabelMSFT;
    private javax.swing.JButton refreshMicrosoftDailyViewButton;
    private javax.swing.JButton refreshMicrosoftWeeklyViewButton;
    private javax.swing.JLabel rsiDailyLabelAAPL;
    private javax.swing.JLabel rsiDailyLabelMSFT;
    private javax.swing.JLabel rsiWeeklyLabelAAPL;
    private javax.swing.JLabel rsiWeeklyLabelMSFT;
    private javax.swing.JScrollPane scrollPaneGraphPanel;
    private javax.swing.JLabel smaDailyLabelAAPL;
    private javax.swing.JLabel smaDailyLabelMSFT;
    private javax.swing.JLabel smaWeeklyLabelAAPL;
    private javax.swing.JLabel smaWeeklyLabelMSFT;
    private javax.swing.JComboBox<String> stockChangeBoxGraphPane;
    private javax.swing.JComboBox<String> stockChangeBoxWeekly;
    private javax.swing.JComboBox<String> stockChangeDailyBox;
    private javax.swing.JLabel stockNameDailyLabelAAPL;
    private javax.swing.JLabel stockNameDailyLabelMSFT;
    private javax.swing.JLabel stockNameWeeklyLabelAAPL;
    private javax.swing.JLabel stockNameWeeklyLabelMSFT;
    private javax.swing.JLabel volumeDailyLabelAAPL;
    private javax.swing.JLabel volumeDailyLabelMSFT;
    private javax.swing.JLabel volumeWeeklyLabelAAPL;
    private javax.swing.JLabel volumeWeeklyLabelMSFT;
    private javax.swing.JLayeredPane weeklyLayeredPane;
    private javax.swing.JPanel weeklyPanel;
    // End of variables declaration//GEN-END:variables
}
